version: '2.1'
services:

  nginx:
    container_name: nginx
    build: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "2021:2021"
      - "5432:5432"
      - "9092:9092"
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
      - ${CONFIG_FOLDER-./../config}/nginx/config.env
    environment:
      USER_NAME: nginx
    volumes:
      - ./nginx/html:/etc/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/http.template.conf:/etc/nginx/http.template.conf
      - ${CONFIG_FOLDER-./../config}/nginx/conf.d:/etc/nginx/conf.d
      - ${CONFIG_FOLDER-./../config}/nginx/htpasswd:/etc/nginx/htpasswd
      - ${CONFIG_FOLDER-./../config}/nginx/certs/server.crt:/etc/nginx/certs/server.crt
      - ${CONFIG_FOLDER-./../config}/nginx/certs/server.key:/etc/nginx/certs/server.key

  dockerui:
    container_name: dockerui
    image: uifd/ui-for-docker:0.12.0-beta
    restart: always
    privileged: true
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  zookeeper:
    container_name: zookeeper
    image: biggis/zookeeper:3.4.6
    restart: always
    hostname: zookeeper
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
    environment:
      USER_NAME: zookeeper
    volumes:
      - zookeeper-data:/tmp/zookeeper/data

  kafka:
    container_name: kafka
    image: biggis/kafka:0.9.0.0
    restart: always
    hostname: kafka
    depends_on:
      - zookeeper
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
    environment:
      USER_NAME: kafka
    volumes:
      - kafka-data:/tmp/kafka/data

  postgres:
    container_name: postgres
    image: biggis/postgres:9.6-alpine
    restart: always
    hostname: postgres
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
      - ${CONFIG_FOLDER-./../config}/postgres/config.env
    environment:
      USER_NAME: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data/pgdata

  pgadmin:
    container_name: pgadmin
    image: fenglc/pgadmin4:1.1
    restart: always
    hostname: pgadmin4
    # TODO remove in future release
    ports:
      - "5050:5050"
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
    environment:
      USER_NAME: pgadmin
      PORT: 5050
    volumes:
      - pgadmin-data:/root/.pgadmin

  consumer-postgres:
    container_name: consumer-postgres
    build: ./consumer/postgres
    image: smueller18/consumer:postgres
    restart: always
    hostname: consumer-postgres
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
      - ${CONFIG_FOLDER-./../config}/consumer/postgres/config.env
    environment:
      USER_NAME: consumer-postgres
    volumes:
      - ./avro/schema/kafka.timestamp-data.avsc:/avro/schema/kafka.timestamp-data.avsc

  consumer-cache-rest:
    container_name: consumer-cache-rest
    build: ./consumer/cache-rest
    image: smueller18/consumer:cache-rest
    restart: always
    hostname: consumer-cache-rest
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
      - ${CONFIG_FOLDER-./../config}/consumer/cache-rest/config.env
    environment:
      USER_NAME: consumer-cache-rest
    volumes:
      - ./avro/schema/kafka.timestamp-data.avsc:/avro/schema/kafka.timestamp-data.avsc

  monitor-technical:
    container_name: monitor-technical
    build: ./monitor/technical
    image: smueller18/monitor:technical
    restart: always
    hostname: monitor-technical
    env_file:
      - ${CONFIG_FOLDER-./../config}/global.env
      - ${CONFIG_FOLDER-./../config}/monitor/technical/config.env
    environment:
      USER_NAME: monitor-technical
    volumes:
      - ${CONFIG_FOLDER-./../config}/producer/chillii/sensor_description.json:/opt/monitor-technical/static/sensor_description.json
      - ${CONFIG_FOLDER-./../config}/monitor/technical/config.template.js:/home/monitor-technical/config.template.js
      - ./avro/schema/kafka.timestamp-data.avsc:/avro/schema/kafka.timestamp-data.avsc

volumes:
  zookeeper-data:
  kafka-data:
  postgres-data:
  pgadmin-data:
