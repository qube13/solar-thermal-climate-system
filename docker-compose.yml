version: '2.1'
services:

  nginx:
    container_name: nginx
    image: nginx:1.11.7-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "444:444"
      - "8888:8888"
    command: /bin/sh -c "nginx -g 'daemon off;'"
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
      - ${STCS_CONFIG_FOLDER-./../config}/nginx/config.env
    environment:
      USER_NAME: nginx
    volumes:
      # index page
      - ./nginx/html:/etc/nginx/html
      # nginx config files
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/http.conf:/etc/nginx/http.conf
      - ${STCS_CONFIG_FOLDER-./../config}/nginx/conf.d:/etc/nginx/conf.d
      # password files
      - ${STCS_CONFIG_FOLDER-./../config}/nginx/htpasswd:/etc/nginx/htpasswd
      # certificates
      - ${STCS_CONFIG_FOLDER-./../config}/nginx/certs/server.crt:/etc/nginx/certs/server.crt
      - ${STCS_CONFIG_FOLDER-./../config}/nginx/certs/server.key:/etc/nginx/certs/server.key
      # monitor
      - ./monitor:/var/www/monitor
      - ${STCS_CONFIG_FOLDER-./../config}/monitor/technical/js/config.js:/var/www/monitor/technical/js/config.js
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: always
    privileged: true
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  zookeeper:
    container_name: zookeeper
    image: biggis/zookeeper:3.4.6
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
    environment:
      USER_NAME: zookeeper
    volumes:
      - zookeeper-data:/tmp/zookeeper/data
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  kafka:
    container_name: kafka
    image: biggis/kafka:0.9.0.0
    restart: always
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
      - ${STCS_CONFIG_FOLDER-./../config}/kafka/config.env
    environment:
      USER_NAME: kafka
    volumes:
      - kafka-data:/tmp/kafka/data
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  postgres:
    container_name: postgres
    image: biggis/postgres:9.6
    restart: always
    hostname: postgres
    ports:
      - "5432:5432"
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
      - ${STCS_CONFIG_FOLDER-./../config}/postgres/config.env
    environment:
      USER_NAME: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data/pgdata
      - ${STCS_CONFIG_FOLDER-./../config}/postgres/postgresql.conf:/var/lib/postgresql/data/pgdata/postgresql.conf
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  pgadmin:
    container_name: pgadmin
    image: fenglc/pgadmin4:1.1
    restart: always
    hostname: pgadmin4
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
    environment:
      USER_NAME: pgadmin
      PORT: 5050
    volumes:
      - pgadmin-data:/root/.pgadmin
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  jupyter-notebook:
    container_name: jupyter-notebook
    image: smueller18/base:anaconda3
    restart: always
    hostname: jupyter-notebook
    volumes:
      - jupyter-notebook-data:/opt/notebooks
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  consumer-postgres:
    container_name: consumer-postgres
    build: ./consumer/postgres
    image: smueller18/consumer:postgres
    restart: always
    hostname: consumer-postgres
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
      - ${STCS_CONFIG_FOLDER-./../config}/consumer/postgres/config.env
    environment:
      USER_NAME: consumer-postgres
    volumes:
      - ./avro/schema/kafka.timestamp-data.avsc:/avro/schema/kafka.timestamp-data.avsc
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  consumer-cache-rest:
    container_name: consumer-cache-rest
    build: ./consumer/cache-rest
    image: smueller18/consumer:cache-rest
    restart: always
    hostname: consumer-cache-rest
    env_file:
      - ${STCS_CONFIG_FOLDER-./../config}/global.env
      - ${STCS_CONFIG_FOLDER-./../config}/consumer/cache-rest/config.env
    environment:
      USER_NAME: consumer-cache-rest
    volumes:
      - ./avro/schema/kafka.timestamp-data.avsc:/avro/schema/kafka.timestamp-data.avsc
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"


volumes:
  zookeeper-data:
  kafka-data:
  postgres-data:
  pgadmin-data:
  jupyter-notebook-data:
