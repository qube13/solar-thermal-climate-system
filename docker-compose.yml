version: '2.1'
services:

  zookeeper:
    container_name: zookeeper
    image: biggis/zookeeper:3.4.6
    restart: always
    hostname: zookeeper
    ports:
      - "${ZOOKEEPER_PORT:-2181}:2181"
    networks:
      - stcs
    environment:
      USER_ID: ${USER_ID:-1000}
      USER_NAME: zookeeper
    volumes:
      - zookeeper-data:/tmp/zookeeper/data

  kafka:
    container_name: kafka
    image: biggis/kafka:0.9.0.0
    restart: always
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT:-9092}:9092"
    networks:
      - stcs
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP}
      USER_ID: ${USER_ID:-1000}
      USER_NAME: kafka
    volumes:
      - kafka-data:/tmp/kafka/data

  postgres:
    container_name: postgres
    image: biggis/postgres:9.6-alpine
    restart: always
    hostname: postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - stcs
    environment:
      USER_ID: ${USER_ID:-1000}
      USER_NAME: postgres
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PW: ${POSTGRES_PW:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data/pgdata

  pgadmin:
    container_name: pgadmin
    image: fenglc/pgadmin4:1.1
    restart: always
    hostname: pgadmin4
    networks:
      - stcs
    environment:
      USER_ID: ${USER_ID:-1000}
      USER_NAME: pgadmin
      PORT: ${PGADMIN_PORT:-5050}
    volumes:
      - pgadmin-data:/root/.pgadmin

  consumer-postgres:
    container_name: consumer-postgres
    build: ./consumer/postgres
    image: smueller18/consumer:postgres
    restart: always
    hostname: consumer-postgres
    depends_on:
      - kafka
      - postgres
    networks:
      - stcs
    environment:
      USER_ID: ${USER_ID:-1000}
      USER_NAME: postgres
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER_CONSUMER:-postgres}
      POSTGRES_PW: ${POSTGRES_PW_CONSUMER:-postgres}
      KAFKA_HOSTS: "kafka:${KAFKA_PORT:-9092}"
      KAFKA_SCHEMA: "/opt/config/kafka.avsc"
      CONSUMER_GROUP: ${CONSUMER_GROUP:-postgres}
      AUTO_COMMIT_INTERVAL: ${AUTO_COMMIT_INTERVAL:-60000}
      LOGGING_LEVEL: ${LOGGING_LEVEL:-INFO}
      LOGGING_FORMAT: ${LOGGING_FORMAT:-%(levelname)8s %(asctime)s %(name)s [%(filename)s:%(lineno)s - %(funcName)s() ] %(message)s}

  consumer-monitor:
    container_name: consumer-monitor
    build: ./consumer/monitor
    image: smueller18/consumer:monitor
    restart: always
    hostname: consumer-monitor
    depends_on:
      - kafka
    networks:
      - stcs
    environment:
      USER_ID: ${USER_ID:-1000}
      USER_NAME: monitor
      PORT: ${MONITOR_PORT:-5000}
      KAFKA_HOSTS: "kafka:${KAFKA_PORT:-9092}"
      KAFKA_SCHEMA: "/opt/config/kafka.avsc"
      TOPIC: ${MONITOR_TOPIC:-chillii}
      CONSUMER_GROUP: ${CONSUMER_GROUP:-monitor}
      AUTO_COMMIT_INTERVAL: ${AUTO_COMMIT_INTERVAL:-60000}
      LOGGING_LEVEL: ${LOGGING_LEVEL:-INFO}
      LOGGING_FORMAT: ${LOGGING_FORMAT:-%(levelname)8s %(asctime)s %(name)s [%(filename)s:%(lineno)s - %(funcName)s() ] %(message)s}

volumes:
  zookeeper-data:
  kafka-data:
  postgres-data:
  pgadmin-data:

networks:
  stcs:
    external: true
