
server {
    listen 80;
    include /etc/nginx/conf.d/http-server_name.conf;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    set $upstream http://consumer-rest-api:5001;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {
        root  /var/www;
        index index.html;
    }

    location /consumer-rest-api {
        rewrite ^/consumer-rest-api/(.*)$ /$1 break;

        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection "";
        proxy_pass $upstream;
    }

    include /etc/nginx/conf.d/http-locations.conf;
}

server {
    listen 444 ssl;

    set $upstream http://pgadmin:5050;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection "";
        proxy_pass $upstream;

        proxy_redirect http://pgadmin:5050 https://$host:444;
    }
}

server {
    listen 445 ssl;

    set $upstream http://portainer:9000;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {

        #auth_basic "Portainer";
        #auth_basic_user_file /etc/nginx/htpasswd/portainer.htpasswd;

        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass $upstream;
    }
}

server {
    listen 446 ssl;

    set $upstream http://consumer-socketio:5002;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass $upstream;
    }
}

server {
    listen 8888 ssl;

    set $upstream http://jupyter-notebook:8888;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass $upstream;
    }
}

server {
    listen 8081 ssl;

    set $upstream http://flink-jobmanager:8081;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {

        auth_basic "Flink Jobmanager";
        auth_basic_user_file /etc/nginx/htpasswd/flink-jobmanager.htpasswd;

        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass $upstream;
    }
}

server {
    listen 9000 ssl;

    set $upstream http://kafka-manager:9000;

    include /etc/nginx/conf.d/http-server_name.conf;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {

        auth_basic "Kafka Manager";
        auth_basic_user_file /etc/nginx/htpasswd/kafka-manager.htpasswd;

        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass $upstream;
    }
}
